schema_version: 1

context:
  component_name: launch
  repo_name: ${{ "gz-" ~ component_name }}
  version: 7.1.1
  major_version: "7"
  name: ${{ repo_name ~ major_version }}
  component_version: ${{ component_name ~ major_version }}
  cxx_name: ${{ "lib" ~ name }}

recipe:
  name: ${{ name }}
  version: ${{ version }}

source:
  - url: https://github.com/gazebosim/${{ repo_name }}/archive/${{ repo_name }}${{ major_version }}_${{ version }}.tar.gz
    sha256: dba949260bf399514aaaff12e98806edeb18f89e11643e12b221caa06a7dc1e0
    patches:
      - unvendor_backward.patch
      - 299.patch

build:
  skip:
    - ppc64le
  number: 0

outputs:
  - package:
      name: ${{ cxx_name }}
    build:
      script:
        - if: unix
          then: build_cxx.sh
        - if: win
          then: bld_cxx.bat
    requirements:
      build:
        - ${{ compiler('cxx') }}
        - ${{ stdlib('c') }}
        - ${{ compiler('c') }}
        - ninja
        - cmake
        - pkg-config
      host:
        - libgz-cmake3
        - libgz-common5
        - libgz-plugin2
        - libgz-tools2
        - libgz-transport13
        - libgz-msgs10
        - libgz-math7
        - libgz-gui8
        - libgz-sim8
        - backward-cpp
        - tinyxml2
        - qt-main
        - if: linux
          then:
            - libwebsockets
            - xorg-libxfixes
            - elfutils
        - libabseil
        - libprotobuf
        - libsdformat14
      run_exports:
        - ${{ pin_subpackage(cxx_name, upper_bound='x') }}
    tests:
      - script:
          - if: not win
            then:
              - test -f ${PREFIX}/include/gz/${{ component_version }}/gz/${{ component_name }}.hh
              - test -f ${PREFIX}/lib/cmake/${{ name }}/${{ name }}-config.cmake
          - if: linux
            then:
              - test -f ${PREFIX}/lib/lib${{ name }}.so
          - if: osx
            then:
              - test -f ${PREFIX}/lib/lib${{ name }}.dylib
          - if: win
            then:
              - if not exist %PREFIX%\\Library\\include\\gz\\${{ component_version }}\\gz\\${{ component_name }}.hh exit 1
              - if not exist %PREFIX%\\Library\\lib\\${{ name }}.lib exit 1
              - if not exist %PREFIX%\\Library\\bin\\${{ name }}.dll exit 1
              - if not exist %PREFIX%\\Library\\lib\\cmake\\${{ name }}\\${{ name }}-config.cmake exit 1

  - package:
      name: ${{ name }}
    requirements:
      run:
        - ${{ pin_subpackage(cxx_name, exact=True) }}
      run_exports:
        - ${{ pin_subpackage(cxx_name, upper_bound='x') }}
    tests:
      - script:
          - if: not win
            then:
              - test -f ${PREFIX}/include/gz/${{ component_version }}/gz/${{ component_name }}.hh
              - test -f ${PREFIX}/lib/cmake/${{ name }}/${{ name }}-config.cmake
          - if: linux
            then:
              - test -f ${PREFIX}/lib/lib${{ name }}.so
          - if: osx
            then:
              - test -f ${PREFIX}/lib/lib${{ name }}.dylib
          - if: win
            then:
              - if not exist %PREFIX%\\Library\\include\\gz\\${{ component_version }}\\gz\\${{ component_name }}.hh exit 1
              - if not exist %PREFIX%\\Library\\lib\\${{ name }}.lib exit 1
              - if not exist %PREFIX%\\Library\\bin\\${{ name }}.dll exit 1
              - if not exist %PREFIX%\\Library\\lib\\cmake\\${{ name }}\\${{ name }}-config.cmake exit 1

  # Versionless dummy packages, see https://github.com/conda-forge/gz-sim-feedstock/issues/102
  - package:
      name: libgz-${{ component_name }}
    requirements:
      run:
        - ${{ pin_subpackage(cxx_name, exact=true) }}
      run_exports:
        - ${{ pin_subpackage(cxx_name, upper_bound='x') }}
        - ${{ pin_subpackage('libgz-launch', upper_bound='x') }}
    tests:
      - script:
          - if: not win
            then:
              - test -f ${PREFIX}/include/gz/${{ component_version }}/gz/${{ component_name }}.hh
              - test -f ${PREFIX}/lib/cmake/${{ name }}/${{ name }}-config.cmake
          - if: linux
            then:
              - test -f ${PREFIX}/lib/lib${{ name }}.so
          - if: osx
            then:
              - test -f ${PREFIX}/lib/lib${{ name }}.dylib
          - if: win
            then:
              - if not exist %PREFIX%\\Library\\include\\gz\\${{ component_version }}\\gz\\${{ component_name }}.hh exit 1
              - if not exist %PREFIX%\\Library\\lib\\${{ name }}.lib exit 1
              - if not exist %PREFIX%\\Library\\bin\\${{ name }}.dll exit 1
              - if not exist %PREFIX%\\Library\\lib\\cmake\\${{ name }}\\${{ name }}-config.cmake exit 1

  - package:
      name: gz-${{ component_name }}
    requirements:
      run:
        - ${{ pin_subpackage(name, exact=true) }}
      run_exports:
        - ${{ pin_subpackage(cxx_name, upper_bound='x') }}
        - ${{ pin_subpackage('libgz-launch', upper_bound='x') }}
    tests:
      - script:
          - if: not win
            then:
              - test -f ${PREFIX}/include/gz/${{ component_version }}/gz/${{ component_name }}.hh
              - test -f ${PREFIX}/lib/cmake/${{ name }}/${{ name }}-config.cmake
          - if: linux
            then:
              - test -f ${PREFIX}/lib/lib${{ name }}.so
          - if: osx
            then:
              - test -f ${PREFIX}/lib/lib${{ name }}.dylib
          - if: win
            then:
              - if not exist %PREFIX%\\Library\\include\\gz\\${{ component_version }}\\gz\\${{ component_name }}.hh exit 1
              - if not exist %PREFIX%\\Library\\lib\\${{ name }}.lib exit 1
              - if not exist %PREFIX%\\Library\\bin\\${{ name }}.dll exit 1
              - if not exist %PREFIX%\\Library\\lib\\cmake\\${{ name }}\\${{ name }}-config.cmake exit 1

  # The gz-harmonic output has different versioning from the other outputs of the feedstocks
  - package:
      name: gz-harmonic
      version: 1.0.0
    build:
      number: 0
    requirements:
      # Based on collection-harmonic.yaml (Harmonic release mapping)
      run:
        - gz-cmake 3.*
        - gz-common 5.*
        - gz-fuel-tools 9.*
        - gz-sim 8.*
        - gz-gui 8.*
        - gz-launch 7.*
        - gz-math 7.*
        - gz-msgs 10.*
        - gz-physics 7.*
        - gz-plugin 2.*
        - gz-rendering 8.*
        - gz-sensors 8.*
        - gz-tools 2.*
        - gz-transport 13.*
        - gz-utils 2.*
        - sdformat 14.*
    tests:
      - script:
          - echo "Metapackage, no test needed"

about:
  homepage: https://github.com/gazebosim/${{ repo_name }}
  license: Apache-2.0
  license_file: LICENSE
  summary: Run and manage programs and plugins.

extra:
  feedstock-name: ${{ repo_name }}
  recipe-maintainers:
    - wolfv
    - traversaro
    - Tobias-Fischer
    - j-rivero
